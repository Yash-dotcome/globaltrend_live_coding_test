def knapsack(weights, values, capacity):
  n=len(weights)
  dp=[[0 for _ in range(capacity+1)] for _ in range(n+1)]

  for i in range(1,n+1):  
    for w in range(1,capacity+1)
    if weights[i-1]<=w:
      dp[i][w]=max(dp[i-1][w],dp[i-1][w-weights[i-1]]+values[i-1]
else
dp[i][w]=dp[i-1][w]

max_value = dp[n][capacity]

included_items = []
w=capacity
for i in range(n,0,-1):
  if dp[i][w]!=dp[i-1][w]:
    included_items.append(i-1)
    w-=weights[i-1]
    
include_items.reverse()
return max_value, included_items

weights=[2,3,4,5]
values=[3,4,5,6]
capacity=8

max_value, included_items = knapsack(weights, values, capacity)
print(f"Maximum value: {max_value}")
print(f"Included items: {included_items}")
